<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mx.system.dao.UserMapper">
    <resultMap id="UserResultMap" type="com.mx.system.model.User">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="number" jdbcType="VARCHAR" property="number"/>
        <result column="department_id" jdbcType="INTEGER" property="departmentId"/>
        <result column="role_ids" jdbcType="INTEGER" property="roleIds"/>
        <result column="true_name" jdbcType="VARCHAR" property="trueName"/>
        <result column="sex" jdbcType="TINYINT" property="sex"/>
        <result column="mail" jdbcType="VARCHAR" property="mail"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="avatar" jdbcType="VARCHAR" property="avatar"/>
        <result column="birthday" property="birthday" jdbcType="TIMESTAMP" />
        <result column="enablef" jdbcType="TINYINT" property="enablef"/>
        <result column="deletef" jdbcType="TINYINT" property="deletef"/>
        <result column="memo" jdbcType="VARCHAR" property="memo"/>
        <result column="join_time" jdbcType="TIMESTAMP" property="joinTime"/>
        <result column="delete_time" jdbcType="TIMESTAMP" property="deleteTime"/>
        <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime"/>
        <result column="login_times" jdbcType="INTEGER" property="loginTimes"/>
        <result column="update_user_id" jdbcType="INTEGER" property="updateUserId"/>
        <result column="add_user_id" jdbcType="INTEGER" property="addUserId"/>
        <result column="departmentName" jdbcType="VARCHAR" property="departmentName"/>
    </resultMap>

    <!-- 获得用户管理grid数据 -->
    <select id="getUserGridData" resultMap="UserResultMap" parameterType="map">
        SELECT
          su.id,
          su.user_name,
          su.number,
          su.department_id,
          su.true_name,
          su.sex,
          su.mail,
          su.phone,
          su.avatar,
          su.enablef,
          su.memo,
          su.join_time,
          sd.name departmentName
        FROM
          sys_user su
          LEFT JOIN sys_department sd ON su.department_id = sd.id
        WHERE
          su.deletef = 0
            <if test="likeStr != null and likeStr != '' " >
                AND (su.number like  CONCAT('%',#{likeStr},'%')
                OR su.true_name like CONCAT('%',#{likeStr},'%')
                OR su.user_name like CONCAT('%',#{likeStr},'%')
                OR su.phone like CONCAT('%',#{likeStr},'%'))
            </if>
            <if test="departmentId != null and departmentId != ''" >
                AND su.department_id = #{departmentId}
            </if>
            <if test="enablef != null and enablef != ''" >
                AND su.enablef = #{enablef}
            </if>
  </select>

    <!-- 添加用户  -->
    <insert id="addUser" parameterType="com.mx.system.model.User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO sys_user (
        user_name,
        password,
        number,
        department_id,
        role_ids,
        true_name,
        sex,
        mail,
        phone,
        birthday,
        join_time,
        memo,
        enablef,
        update_user_id,
        add_user_id)
        VALUES (
        #{userName},
        #{password},
        #{number},
        #{departmentId},
        #{roleIds},
        #{trueName},
        #{sex},
        #{mail},
        #{phone},
        #{birthday},
        #{joinTime},
        #{memo},
        #{enablef},
        #{updateUserId},
        #{addUserId})
    </insert>

    <!-- 编辑用户  -->
    <update id="editUser" parameterType="com.mx.system.model.User">
        UPDATE
        sys_user
        SET
        user_name = #{userName},
        password = #{password},
        number = #{number},
        department_id = #{departmentId},
        role_ids = #{roleIds},
        true_name = #{trueName},
        sex = #{sex},
        mail = #{mail},
        phone = #{phone},
        <if test="avatar != null and avatar != ''">
            avatar = #{avatar},
        </if>
        birthday = #{birthday},
        join_time = #{joinTime},
        memo = #{memo},
        enablef = #{enablef},
        update_user_id = #{updateUserId}
        WHERE
        id = #{id}
    </update>

    <!-- 编辑用户头像地址  -->
    <update id="editUserAvatar" parameterType="map">
        UPDATE
            sys_user
        SET
            avatar = #{avatar}
        WHERE
            id = #{id}
    </update>

    <!-- 获得用户详细信息 -->
    <select id="getUserInfoById" resultMap="UserResultMap" parameterType="Integer">
        SELECT
            su.id,
            su.user_name,
            su.password,
            su.number,
            su.department_id,
            su.role_ids,
            su.true_name,
            su.sex,
            su.mail,
            su.phone,
            su.birthday,
            su.join_time,
            su.avatar,
            su.enablef,
            su.memo
        FROM
            sys_user su
        WHERE
            su.deletef = 0
            AND su.id = #{id}
    </select>

</mapper>